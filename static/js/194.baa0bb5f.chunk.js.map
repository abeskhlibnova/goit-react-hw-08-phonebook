{"version":3,"file":"static/js/194.baa0bb5f.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","components/ContactList/ContactList .jsx","components/Filter/Filter.jsx","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["export const getContacts = ({ contacts }) => contacts.items;\nexport const getLoading = ({ contacts }) => contacts.isLoading;\nexport const getError = ({ contacts }) => contacts.error;\n","import React from 'react';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  InputWrapper,\n  Input,\n  Label,\n  AddContactButton,\n  PhonebookTitle,\n  PhonebookContainer,\n} from '../PhonebookTheme.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { toast } from 'react-toastify';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const addPhoneContact = contact => {\n    if (isDuplicate(contact)) {\n      toast.warn(`${contact.name} is already in contacts`);\n      return;\n    }\n\n    toast('Contact added');\n    const action = addContact(contact);\n    dispatch(action);\n    setName('');\n    setNumber('');\n  };\n\n  const isDuplicate = ({ name }) => {\n    const result = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n    return result;\n  };\n\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addPhoneContact({ name, number });\n  };\n\n  return (\n    <PhonebookContainer>\n      <PhonebookTitle>Phonebook</PhonebookTitle>\n      <form onSubmit={handleSubmit}>\n        <InputWrapper>\n          <Label htmlFor={nameId}>Name</Label>\n          <Input\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={event => setName(event.target.value)}\n            placeholder=\"Enter name\"\n          />\n        </InputWrapper>\n        <InputWrapper>\n          <Label htmlFor={numberId}>Number</Label>\n          <Input\n            id={numberId}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={event => setNumber(event.target.value)}\n            placeholder=\"Enter number +000...\"\n          />\n        </InputWrapper>\n        <AddContactButton type=\"submit\">Add contact</AddContactButton>\n      </form>\n    </PhonebookContainer>\n  );\n}\n","export const getFilter = store => store.filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport {\n  ContactsList,\n  ContactsItem,\n  RemoveContactButton,\n} from '../PhonebookTheme.styled';\nimport { IconContext } from 'react-icons';\nimport { RiDeleteBack2Line } from 'react-icons/ri';\nimport { toast } from 'react-toastify';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const removePhoneContact = id => {\n    toast.success('Contact removed');\n    const action = deleteContact(id);\n    dispatch(action);\n  };\n\n  const getFilteredContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLocaleLowerCase();\n    const filteredContacts = contacts.filter(({ name }) => {\n      const normalizedName = name.toLocaleLowerCase();\n      const result = normalizedName.includes(normalizedFilter);\n      return result;\n    });\n    return filteredContacts;\n  };\n  const filteredContacts = getFilteredContacts();\n\n  const elements = filteredContacts.map(({ name, number, id }) => {\n    return (\n      <ContactsItem key={id}>\n        &#128578; {name}: {number}\n        <RemoveContactButton onClick={() => removePhoneContact(id)}>\n          <IconContext.Provider value={{ color: '#1abc9c', size: '25px' }}>\n            <RiDeleteBack2Line />\n          </IconContext.Provider>\n        </RemoveContactButton>\n      </ContactsItem>\n    );\n  });\n  return <ContactsList>{elements}</ContactsList>;\n}\n","import React from 'react';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { FilterTitle, FilterInput } from '../PhonebookTheme.styled';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    const { value } = e.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div>\n      <FilterTitle>Find contacts by name</FilterTitle>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChangeFilter}\n        placeholder=\"Enter a name to search...\"\n      ></FilterInput>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList ';\nimport Filter from '../../components/Filter/Filter';\nimport {\n  ContactsTitle,\n  Form,\n  ContactFilterForm,\n} from '../../components/PhonebookTheme.styled';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { getLoading, getError } from 'redux/contacts/contacts-selectors';\nimport Loader from '../../components/Loader/Loader';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Form>\n      <ContactForm />\n      <ContactFilterForm>\n        <ContactsTitle>Contacts</ContactsTitle>\n        <Filter />\n        {isLoading && !error && <Loader />}\n        <ContactList />\n      </ContactFilterForm>\n    </Form>\n  );\n}\n"],"names":["getContacts","contacts","items","getLoading","isLoading","getError","error","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","isDuplicate","find","contact","toLocaleLowerCase","nameId","nanoid","numberId","onSubmit","e","preventDefault","toast","action","addContact","addPhoneContact","htmlFor","id","type","pattern","title","required","value","onChange","event","target","placeholder","getFilter","store","filter","ContactList","elements","normalizedFilter","includes","getFilteredContacts","map","onClick","deleteContact","removePhoneContact","color","size","Filter","setFilter","Phonebook","useEffect","fetchContacts","Loader"],"sourceRoot":""}